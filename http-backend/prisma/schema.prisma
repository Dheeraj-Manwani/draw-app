// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//
// Enums
//
enum ElementType {
  RECTANGLE
  ELLIPSE
  FREE
  LINE
  ARROW
  TEXT
  EMBEDDED
  PICTURE
}

//
// Models
//

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String? // Optional for Clerk users
  salt      String? // Optional for Clerk users
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  rooms    Room[]    @relation("UserRooms") // rooms user is part of
  elements Element[] // elements created by this user
  Room     Room[]
}

model Room {
  id        String   @id @default(uuid())
  name      String
  slug      String   @unique
  adminId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  admin    User      @relation(fields: [adminId], references: [id])
  elements Element[]
  users    User[]    @relation("UserRooms")
}

model Element {
  id        String      @id @default(uuid())
  roomId    String
  userId    String
  type      ElementType
  data      Json // contains position, size, style, text, points, etc.
  version   Int         @default(1) // useful for conflict resolution
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  // Relations
  room Room @relation(fields: [roomId], references: [id])
  user User @relation(fields: [userId], references: [id])
}
